#!/usr/bin/env bash

# Add following to crontab
# SHELL=/bin/bash
# @hourly /home/sol/sosh/bin/cronjob --hourly &>> /home/sol/hourly_cron.log
# 0    */12   *    *    *  /home/sol/sosh/bin/cronjob --daily
# */15 *      *    *    * /home/sol/sosh/bin/cronjob --ping

set -e

here="$(dirname "$0")"

#shellcheck source=/dev/null
source "$here"/../service-env.sh

opt=$1

if [ $SOSH_CONFIG == "primary" ] && [ "$opt" != "--ping" ]; then
  echo "Do not run $0 on a primary node"
  exit 0
fi

solana_args=()
if [[ -n $SOL_RUNNER_RPC_URL ]]; then
  solana_args+=(--url "$SOL_RUNNER_RPC_URL")
elif [[ -n $SOSH_RPC_URL ]]; then
  solana_args+=(--url "$SOSH_RPC_URL")
fi


total_lamports() {
  declare -i validator_lamports="$(solana ${solana_args[@]} balance ~/keys/primary/validator-identity.json --output json-compact | python3 -c "import sys, json; print(json.load(sys.stdin)['lamports'])")"
  declare -i vote_lamports="$(solana ${solana_args[@]} balance ~/keys/primary/validator-vote-account.json --output json-compact | python3 -c "import sys, json; print(json.load(sys.stdin)['lamports'])")"
  declare -i signer_lamports="$(solana ${solana_args[@]} balance $(<~/keys/primary/validator-vote-auth-pubkey) --output json-compact | python3 -c "import sys, json; print(json.load(sys.stdin)['lamports'])")"

  declare -i lamport=validator_lamports+vote_lamports+signer_lamports
  echo "$lamport"
}

lamports_to_sol() {
  sol=$(echo "scale=3; $1 / 1000000000" | bc -l)
  echo "$sol"
}

is_reachable() {
  ping $1 -q -c 1 -W 1 || curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$1 in unreachable\"}" $SOSH_SLACK_WEBHOOK
}

declare -i last_epoch=0
if [ -f ~/balance.csv ]; then
  last_epoch=$(tail -n 1 ~/balance.csv | cut -f 1 -d ',')
fi

epoch="$(solana ${solana_args[@]} epoch)"
vote_pubkey="$(solana-keygen pubkey ~/keys/primary/validator-vote-account.json)"
export LATITUDE_API_KEY
export SLACK_WEBHOOK=$SOSH_SLACK_WEBHOOK

case "$opt" in
  "--hourly" )
    echo "Running hourly variant"
    if (( epoch > last_epoch )); then
      total_lamport=$(total_lamports)
      echo "$epoch, $last_epoch, $total_lamport" >> ~/balance.csv
      total_sol="$(sol-runner node-balance -v $vote_pubkey)"
      msg="New Epoch: $epoch (previous: $last_epoch), Balance: $total_sol sol, $total_lamport lamports"
      echo $msg
      if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
        sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p new-epoch
      fi
    else
      if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
        sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p alert
      fi
    fi
    ;;
  "--daily" )
    echo "Running daily variant"
    total_lamport=$(total_lamports)
    total_sol="$(sol-runner node-balance -v $vote_pubkey)"
    msg="Epoch: $epoch (previous: $last_epoch), Balance: $total_sol sol, $total_lamport lamports"
    echo $msg
    if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
      sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p periodic
    fi
    ;;
  "--ping" )
    echo "Running ping variant"
    is_reachable $SOSH_RESTART_XFERID_FAILOVER_HOSTNAME
    ;;
  *)
    echo "Running unknown variant"
    total_lamport=$(total_lamports)
    total_sol="$(sol-runner node-balance -v $vote_pubkey)"
    msg="Epoch: $epoch (previous: $last_epoch), Balance: $total_sol sol, $total_lamport lamports"
    echo $msg
    ;;
esac


