#!/usr/bin/env bash

# Add following to crontab
# SHELL=/bin/bash
# @hourly /home/sol/sosh/bin/cronjob --hourly &>> /home/sol/hourly_cron.log
# 0    */12   *    *    *  /home/sol/sosh/bin/cronjob --daily
# */15 *      *    *    * /home/sol/sosh/bin/cronjob --ping

set -e

here="$(dirname "$0")"

#shellcheck source=/dev/null
source "$here"/../service-env.sh

opt=$1

if [ $SOSH_CONFIG == "primary" ] && [ "$opt" != "--ping" ]; then
  echo "Do not run $0 on a primary node"
  exit 0
fi

solana_args=()
if [[ -n $SOL_RUNNER_RPC_URL ]]; then
  solana_args+=(--url "$SOL_RUNNER_RPC_URL")
elif [[ -n $SOSH_RPC_URL ]]; then
  solana_args+=(--url "$SOSH_RPC_URL")
fi

is_reachable() {
  ping $1 -q -c 1 -W 1 || curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"<@channel> $1 in unreachable\"}" $SOSH_SLACK_WEBHOOK
}

current_epoch="$(solana ${solana_args[@]} epoch)"
vote_pubkey="$(solana-keygen pubkey ~/keys/primary/validator-vote-account.json)"
export LATITUDE_API_KEY
export SLACK_WEBHOOK=$SOSH_SLACK_WEBHOOK

case "$opt" in
  "--hourly" )
    printf "\nRunning hourly variant\n"
    latest_epoch_in_table="$(balancing -s ~/balancing/config/settings.yaml latest-epoch)"
    declare -i next_expected_complete_epoch=latest_epoch_in_table+1
    if (( current_epoch > next_expected_complete_epoch )); then
      node_balance="$(sol-runner ${solana_args[@]} node-balance -v $vote_pubkey)"
      stake_balance="$(sol-runner ${solana_args[@]} stake-balance -w $STAKE_WITHDRAWER)"
      stake_rewards="$(sol-runner ${solana_args[@]} stake-rewards -w $STAKE_WITHDRAWER)"
      jito_rewards="$(sol-runner ${solana_args[@]} jito-rewards -w $STAKE_WITHDRAWER)"
      fmv="$(sol-runner ${solana_args[@]} price)"
      now="$(date '+%m/%d/%Y')"
      RUST_LOG=balancing=info balancing -s ~/balancing/config/settings.yaml update-epoch -e $next_expected_complete_epoch -d $now -j $jito_rewards -s $stake_rewards -f $fmv -n $node_balance -b $stake_balance

      msg="New Epoch: $current_epoch (previous: $next_expected_complete_epoch), Balance: $node_balance sol"
      echo $msg
      if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
        sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p new-epoch
      fi
    else
      if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
        sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p alert
      fi
    fi
    SLACK_WEBHOOK=$SOSH_SALES_SLACK_WEBHOOK RUST_LOG=balancing=info balancing -s ~/balancing/config/settings.yaml drain-wallets -p ~/balancing/keys --url http://127.0.0.1:8899/
    SLACK_WEBHOOK=$SOSH_SALES_SLACK_WEBHOOK RUST_LOG=balancing=info balancing -s ~/balancing/config/settings.yaml confirm-sales --url "$SOL_RUNNER_RPC_URL"
    ;;
  "--daily" )
    printf "\nRunning daily variant\n"
    node_balance="$(sol-runner ${solana_args[@]} node-balance -v $vote_pubkey)"
    msg="Epoch: $current_epoch, Balance: $node_balance sol"
    echo $msg
    if [[ -n $SOSH_SLACK_WEBHOOK ]]; then
      sol-runner ${solana_args[@]} node-status -v $vote_pubkey -w $STAKE_WITHDRAWER -p periodic
    fi
    SLACK_WEBHOOK=$SOSH_SALES_SLACK_WEBHOOK RUST_LOG=balancing=info balancing -s ~/balancing/config/settings.yaml consolidate-usdc -p ~/balancing/keys --url http://127.0.0.1:8899/
    ;;
  "--ping" )
    printf "\nRunning ping variant\n"
    is_reachable $SOSH_RESTART_XFERID_FAILOVER_HOSTNAME
    if [ $SOSH_CONFIG != "primary" ]; then
      SLACK_WEBHOOK=$SOSH_SALES_SLACK_WEBHOOK RUST_LOG=balancing=info balancing -s ~/balancing/config/settings.yaml confirm-sales --url "$SOL_RUNNER_RPC_URL"
    fi
    ;;
  *)
    echo "Running unknown variant"
    node_balance="$(sol-runner ${solana_args[@]} node-balance -v $vote_pubkey)"
    msg="Epoch: $current_epoch, Balance: $node_balance sol"
    echo $msg
    ;;
esac


